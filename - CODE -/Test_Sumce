#include <IRremote.hpp>
#include "Adafruit_VL53L0X.h"

// levy motor
#define m1 18
// Pravy motor
#define m2 8

#define m1_vzad 17
#define m2_vzad 9

// piny senzoru cary
#define intenzita1 2
#define intenzita2 15
#define intenzita3 22
#define intenzita4 21

// adresy laseru
#define LOX1_ADDRESS 0x30
#define LOX2_ADDRESS 0x31
#define LOX3_ADDRESS 0x32

// x shot piny
#define SHT_LOX1 3
#define SHT_LOX2 12
#define SHT_LOX3 13

// pin ovladace
#define ovladac 14

#define prumer_ryngu 750

Adafruit_VL53L0X lox1 = Adafruit_VL53L0X();
Adafruit_VL53L0X lox2 = Adafruit_VL53L0X();
Adafruit_VL53L0X lox3 = Adafruit_VL53L0X();

VL53L0X_RangingMeasurementData_t measure1;
VL53L0X_RangingMeasurementData_t measure2;
VL53L0X_RangingMeasurementData_t measure3;

IRrecv IR(ovladac);

// Funkce pro nastaveni laseru
void setID() {
  
  digitalWrite(SHT_LOX1, LOW);    
  digitalWrite(SHT_LOX2, LOW);
  digitalWrite(SHT_LOX3, LOW);
  delay(10);
  
  digitalWrite(SHT_LOX1, HIGH);
  digitalWrite(SHT_LOX2, HIGH);
  digitalWrite(SHT_LOX3, HIGH);
  delay(10);

  // activating LOX1 and reseting LOX2
  digitalWrite(SHT_LOX1, HIGH);
  digitalWrite(SHT_LOX2, LOW);
  digitalWrite(SHT_LOX3, LOW);

  // initing LOX1
  if(!lox1.begin(LOX1_ADDRESS)) {
    Serial.println(F("Failed to boot first VL53L0X"));
    //while(1);
  }
  delay(10);

  // activating LOX2
  digitalWrite(SHT_LOX2, HIGH);
  delay(10);

  //initing LOX2
  if(!lox2.begin(LOX2_ADDRESS)) {
    Serial.println(F("Failed to boot second VL53L0X"));
   // while(1);
  }
  delay(10);

  digitalWrite(SHT_LOX3, HIGH);
  delay(10);

  if(!lox3.begin(LOX3_ADDRESS)) {
    Serial.println(F("Failed to boot third VL53L0X"));
   // while(1);
  }  
}


void setup() {
  pinMode(m1, OUTPUT);
  pinMode(m2, OUTPUT);

  pinMode(intenzita1, INPUT);
  pinMode(intenzita2, INPUT);
  pinMode(intenzita3, INPUT);
  pinMode(intenzita4, INPUT);

  Serial.begin(9600);
  IR.enableIRIn();
  setID();
}
// funkce do ktere zadate stavy motoru pomoci kterych se bude pohybovat (v logice je uz lepsi reseni)
void priprava_motoru(byte motor1, byte motor2, byte motor1_vzad, byte motor2_vzad){
  digitalWrite(m1, motor1);
  digitalWrite(m2, motor2);
  digitalWrite(m1_vzad, motor1_vzad);
  digitalWrite(m2_vzad, motor2_vzad);
  delay(500);
}
//test motoru - mnel by fungovat
void test_motoru(){
  priprava_motoru(HIGH, HIGH, LOW, LOW);
  Serial.println("Motr vpred");
  priprava_motoru(LOW, LOW, HIGH, HIGH);
  Serial.println("Motr vzad");
  priprava_motoru(HIGH, LOW, LOW, HIGH);
  Serial.println("Motr doprava");
  priprava_motoru(LOW, HIGH, HIGH, LOW);
  Serial.println("Motr doleva");
   
}
// test senzoru intenzity svetla, zdali vid9 caru
void test_detektoru_cary(){
  Serial.print("Senzor Intenzity 1: ");
  Serial.println(digitalRead(intenzita1));
  Serial.print("Senzor Intenzity 2: ");
  Serial.println(digitalRead(intenzita2));
  Serial.print("Senzor Intenzity 3: ");
  Serial.println(digitalRead(intenzita3));
  Serial.print("Senzor Intenzity 4: ");
  Serial.println(digitalRead(intenzita4));
}
// test laseru, zdali meri vzdalenost
void test_laseru(){
  Serial.print("Laser 1: ");
  Serial.println(measure1.RangeMilliMeter);
  Serial.print("Laser 2: ");
  Serial.println(measure2.RangeMilliMeter);
  Serial.print("Laser 3: ");
  Serial.println(measure3.RangeMilliMeter);
}
// pokud ovladac a prijimac funguje, v seriovem monitoru se objevy cislo v binearni soustave
void test_ovladace(){
  for(int i=0; i<=1000; i+100){
    if(IR.decode()){
      Serial.println(IR.decodedIRData.decodedRawData, BIN);
      delay(100);
      IR.resume();
    }
  }
}


void loop() {
  test_motoru(); 
  //test_ovladace(); 
  //test_detektoru_cary();
  //test_laseru();
}  
